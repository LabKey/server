import org.labkey.gradle.util.BuildUtils

apply plugin: 'org.labkey.database'

BuildUtils.addLabKeyDependency(project: project, config: 'jars', depProjectPath: ":remoteapi:java", transitive: true)
BuildUtils.addLabKeyDependency(project: project, config: 'jars', depProjectPath: ":schemas", depProjectConfig: "xmlSchema")
BuildUtils.addLabKeyDependency(project: project, config: 'jars', depProjectPath: ":server:api")
BuildUtils.addLabKeyDependency(project: project, config: 'jars', depProjectPath: ":server:internal")
BuildUtils.addLabKeyDependency(project: project, config: 'jspJars', depProjectPath: ":server:api", depProjectConfig: "jspCompile")
BuildUtils.addLabKeyDependency(project: project, config: 'jspJars', depProjectPath: ":server:internal", depProjectConfig: "jspCompile")
BuildUtils.addLabKeyDependency(project: project, config: 'tomcatJars', depProjectPath: ":server:bootstrap")
dependencies
        {
            tomcatJars  "com.sun.mail:javax.mail:${javaxMailVersion}"
            tomcatJars  "net.sourceforge.jtds:jtds:${jtdsVersion}" // MS SQLServer JDBC Driver
            tomcatJars  "org.postgresql:postgresql:${postgresqlDriverVersion}"
            tomcatJars   group: 'mysql', name: 'mysql-connector-java', version: mysqlDriverVersion
            // we require the ant jar in the tomcat/lib directory because the RecompilingJspClassLoader uses JspC, which 
            // derives from an ant task.
            tomcatJars   "org.apache.ant:ant:${antVersion}"

            remotePipelineJars "javax.servlet:servlet-api:${servletApiVersion}"
        }

apply plugin: 'org.labkey.jsdoc'
apply plugin: 'org.labkey.xsddoc'
apply plugin: 'org.labkey.tomcat'
apply plugin: 'org.labkey.serverDeploy'
